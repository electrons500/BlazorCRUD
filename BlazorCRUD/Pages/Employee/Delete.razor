@page "/Employee/Delete/{CurrentID}"
@using BlazorCRUD.Models.ViewModel
@inject BlazorCRUD.Models.Services.EmployeeService _employeeservice
@inject NavigationManager NavigationManager

<h3>Delete</h3>
<hr />
<br />
<h2>Are you sure you want to delete this?</h2>

<div class="row">
    <div class="col-md-8">
        <div class="form-group">
            <label>Employee ID:</label>
            <label>@model.EmployeeId</label>
        </div>
        <div class="form-group">
            <label>First name:</label>
            <label>@model.Firstname</label>
        </div>
        <div class="form-group">
            <label>Last name:</label>
            <label>@model.Lastname</label>
        </div>
        <div class="form-group">
            <label>Age:</label>
            <label>@model.Age</label>
        </div>
    </div>

</div>

<div class="row">
    <div class="col-md-4">
        <div class="form-group">
            <input type="button" class="btn btn-danger" value="Delete" @onclick="@EditEmployee" />
            &nbsp;
            <input type="button" class="btn btn-primary" value="Cancel" @onclick="@cancel" />
        </div>
    </div>
</div>



@code {


    [Parameter]
    public string currentID { get; set; }

    EmployeeViewModel model = new EmployeeViewModel();

    protected override async Task OnInitializedAsync()
    {
        model = await Task.Run(() => _employeeservice.GetEmployeeDetails(Convert.ToInt32(currentID)));
    }

    protected void EditEmployee()
    {
        bool result = _employeeservice.DeleteEmployee(Convert.ToInt32(currentID));
        if (result)
        {
            NavigationManager.NavigateTo("/Employee/Index");
        }

    }

    protected void cancel()
    {
        NavigationManager.NavigateTo("/Employee/Index");
    }

}
